#Assim como o RS, o Deployment usa outra versão da API
apiVersion: apps/v1

#E também tem um TIPO de recurso exclusivo dele, o Deployment
kind: Deployment

#vamos definir o nome do Deployment
metadata:
  name: pod-portal-noticias-deployment

spec: #Especificação do nosso Pod
  replicas: 1
  template:
    metadata:
      name: pod-portal-noticias
      labels:
        app: portal-noticias

#Especificações do container
    spec:
      containers:
        - name: container-portal-noticias
          image: aluracursos/portal-noticias:1
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: configmap-frontend
          
          #Definindo Liveness para checar a saúde do container
          livenessProbe:
            httpGet: #Temos três métodos para verificar a saúde do Container: HTTP, Comando e TCP
              path: / #Caminho que o Liveness vai verificar
              port: 80 #Porta que nosso container está usando
            
            periodSeconds: 10 #De quanto em quanto tempo ele vai verficar

            failureThreshold: 3 #Quantos erros vão ser toleraveos antes de reiniciar

            initialDelaySeconds: 20 #Quanto tempo o liveness vai esperar para começar as verificações após o container subir



          #Criando Readiness
          readinessProbe:
            httpGet:
              path: / #Caminho que o Readiness irá verificar
              port: 80
            periodSeconds: 10 #De quanto em quanto tempo ele vai verficar

            failureThreshold: 5 #Quantos erros vão ser toleraveos antes de reiniciar
            
            initialDelaySeconds: 3 #Quanto tempo o liveness vai esperar para começar as verificações após o container subir
  selector:
    matchLabels:
      app: portal-noticias